# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    notas.txt                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: fpinho-d <fpinho-d@student.42porto.com>    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/09/07 20:14:53 by fpinho-d          #+#    #+#              #
#    Updated: 2023/10/08 07:29:15 by fpinho-d         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

Comportamento do Shell:

-> recebe um commando
-> lê o commando (divide em types-> tambem chamado parsing ou tokinization) e passa ao kernel para interpretar
-> kernel interpreta o comando (busca nos diretorios o ficheiro executavel (tem que ser feito) relacionado com o comando)
-> kernel executa o comando


Tipos de command:

1 - Executable command;
    -> call by names
    -> ls, touch
    -> estao disponiveis em bibliotecas

2 - Built-in command: 

- nao sao ficheiros executaveis como 'ls' ou 'touch'
- exemplo: cd (temos que expicificar claramente o que esperamos dele)
- definidos pelo desenvolvedor









--------------------------------------------------------------------------------------
https://www.youtube.com/watch?v=ubt-UjcQUYg:

PARSECMD - resursive descendent parser
RUNCMD   - walk the tree recursively. Execute the nodes. create child processes as required (fork)
--------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------
https://www.youtube.com/watch?v=2xayf6AMNtU:

QUESTIONS
What is PID and PPID?
- process id and parent process id
PID from init is always = 1 (like a grandfather of all PID, so when a PPID is dead init will take 
care of child process but can create zumbie process as consequence)
What are the 3 prothotypes of main?
- int main (void)
- int main (int ac, char **av)
- int main (int ac, char ** av, char ** env)
  
How to suspend a process until childrens terminetae?

---------------------------------------------------------------------------------------------

Resolvido:

- não podemos usar strtok (ft_tokanize.c), temos que fazer o nosso ft_strtok:

    char *strtok(char *str, const char *delim);

    str represents the string to be tokenize

delim represents what can of characters we expect to be separating 
the string which should be used as a guide to break the string into smaller chunks. 




LINKS UTEIS

https://blog.ehoneahobed.com/building-a-simple-shell-in-c-part-1

https://blog.ehoneahobed.com/building-a-simple-shell-in-c-part-2

https://www.codevivek.com/writing-a-shell-in-c/

https://www.dmulholl.com/lets-build/a-command-line-shell.html

https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/

https://www.grymoire.com/Unix/Csh.html

https://danishpraka.sh/posts/write-a-shell/

https://www.notion.so/Links-teis-Minishell-define-M-f829e8eb90a44457b94b7137e08ac7eb
